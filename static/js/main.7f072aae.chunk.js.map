{"version":3,"sources":["Tag2.js","Layout.js","index.js"],"names":["components","Container","Row","Col","Alert","Button","Modal","ModalHeader","ModalBody","ModalFooter","Tag","props","tggg","tag","handler","getVar","modal","setVar","react_default","a","createElement","IsFunc","toCall1","varCall1","varCall2","forEach","element","undefined","React","Object","objectSpread","className","map","item","key","Math","random","Fragment","x","Layout","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","vars","changeLayout","alertx","alert","toggleModal","c","y","setState","Callhandler","method","isOpenModal","bind","assertThisInitialized","_this2","lenth","axios","get","then","res","data","Components","Component","rootElement","document","getElementById","ReactDOM","render","Layout_Layout"],"mappings":"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","file":"static/js/main.7f072aae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\n\r\nconst components = {\r\n  Container: Container,\r\n  Row: Row,\r\n  Col: Col,\r\n  Alert: Alert,\r\n  Button: Button,\r\n  Modal: Modal,\r\n  ModalHeader: ModalHeader,\r\n  ModalBody: ModalBody,\r\n  ModalFooter: ModalFooter\r\n};\r\nexport default function Tag(props) {\r\n  const { tag, handler, modal, getVar, setVar } = props;\r\n\r\n  if (typeof tag === \"undefined\" || !(\"Type\" in tag)) return <p>Loading....</p>;\r\n\r\n  if (\"onClick\" in tag[\"Props\"] && !IsFunc(tag[\"Props\"][\"onClick\"])) {\r\n    var toCall1 = tag[\"Props\"][\"onClick\"][\"function\"];\r\n    var varCall1 = tag[\"Props\"][\"onClick\"][\"vars\"];\r\n    tag[\"Props\"][\"onClick\"] = () =>\r\n      handler(toCall1, varCall1);\r\n  }\r\n\r\n  if (\"toggle\" in tag[\"Props\"] && !IsFunc(tag[\"Props\"][\"toggle\"])) {\r\n    var toCall2 = tag[\"Props\"][\"toggle\"][\"function\"];\r\n    var varCall2 = tag[\"Props\"][\"toggle\"][\"vars\"];\r\n    tag[\"Props\"][\"toggle\"] = () => handler(toCall1 ,varCall2 );\r\n  }\r\n\r\n  if (\"Vars\" in tag) {\r\n    tag[\"Vars\"].forEach(element => {\r\n      setVar(element, false);\r\n    });\r\n    delete tag[\"Vars\"];\r\n  }\r\n\r\n  if (tag['Props']['isOpen'] !== undefined) {\r\n    tag[\"Props\"][\"isOpen\"] = getVar(tag['id'])\r\n  }\r\n\r\n  var tggg;\r\n  tggg = React.createElement(\r\n    components[tag[\"Type\"]] || tag[\"Type\"],\r\n    {\r\n      className: tag[\"Props\"][\"className\"],\r\n      ...tag[\"Props\"]\r\n    },\r\n    tag[\"Content\"],\r\n    tag[\"Childerns\"].map(item => (\r\n      <Tag\r\n        key={Math.random()}\r\n        tag={item}\r\n        handler={handler}\r\n        getVar={getVar}\r\n        setVar={setVar}\r\n      />\r\n    ))\r\n  );\r\n  return <React.Fragment>{tggg}</React.Fragment>;\r\n}\r\n\r\nvar IsFunc = x => {\r\n  return typeof x === \"function\";\r\n};\r\nvar IsArray = x => {\r\n  return x.constructor === Array\r\n};\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Tag from \"./Tag2\";\r\n\r\nexport default class Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.Callhandler = this.Callhandler.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.getVar = this.getVar.bind(this);\r\n    this.setVar = this.setVar.bind(this);\r\n  }\r\n  state = {\r\n    Layout: {},\r\n    vars: {}\r\n  };\r\n  componentDidMount() {\r\n    if (this.state.Layout.lenth > 0) return;\r\n    axios.get(\"https://api.myjson.com/bins/w91ms\").then(res => {\r\n      let Layout = res.data;\r\n      this.setState({ Layout });\r\n    });\r\n  }\r\n  changeLayout = () => {};\r\n  alertx = () => {\r\n    alert(\"hello\");\r\n  };\r\n\r\n  toggleModal = (x) => {\r\n    var c = this.getVar(x)\r\n    c = !c\r\n    this.setVar(x,c)\r\n  };\r\n  getVar = x => {\r\n    //console.log(\"i will return :\" )\r\n    //console.log( this.state.vars[x])\r\n    if(this.state.vars[x] != undefined )\r\n      return this.state.vars[x]\r\n  };\r\n  setVar = (x, y) => {\r\n    //console.log(x)\r\n    const vars = this.state.vars;\r\n    vars[x] = y;\r\n    this.setState({\r\n      vars: vars\r\n    });\r\n  };\r\n  Callhandler = (method,vars) => {\r\n    //console.log(method) \r\n    //console.log(vars)\r\n    switch (method) {\r\n      case \"UpdateLayout\":\r\n        this.changeLayout();\r\n        break;\r\n      case \"alertx\":\r\n        this.alertx();\r\n        break;\r\n      case \"toggleModal\":\r\n        this.toggleModal(vars);\r\n        break;\r\n      case \"isOpenModal\":\r\n        this.isOpenModal();\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Tag\r\n        tag={this.state.Layout.Components}\r\n        handler={this.Callhandler}\r\n        getVar={this.getVar}\r\n        setVar={this.setVar}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Layout from \"./Layout\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  return <Layout />;\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}