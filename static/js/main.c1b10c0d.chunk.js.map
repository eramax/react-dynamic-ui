{"version":3,"sources":["Tag2.js","Layout.js","index.js"],"names":["components","Container","Row","Col","Alert","Button","Modal","ModalHeader","ModalBody","ModalFooter","Tag","props","tggg","tag","handler","modal","react_default","a","createElement","IsFunc","toCall","React","Object","objectSpread","className","map","item","key","Math","random","Fragment","x","Layout","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","changeLayout","alertx","alert","toggleModal","setState","isOpenModal","Callhandler","method","bind","assertThisInitialized","_this2","lenth","axios","get","then","res","data","Components","Component","rootElement","document","getElementById","ReactDOM","render","Layout_Layout"],"mappings":"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","file":"static/js/main.c1b10c0d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nconst components = {\r\n  Container: Container,\r\n  Row: Row,\r\n  Col: Col,\r\n  Alert: Alert,\r\n  Button: Button,\r\n  Modal: Modal,\r\n  ModalHeader: ModalHeader,\r\n  ModalBody: ModalBody,\r\n  ModalFooter: ModalFooter\r\n};\r\nexport default function Tag(props) {\r\n  const { tag, handler, modal } = props;\r\n\r\n  if (typeof tag === \"undefined\" || !(\"Type\" in tag) )return <p>Loading....</p>;\r\n\r\n  if (!IsFunc(tag[\"Props\"][\"onClick\"])  && \"onClick\" in tag[\"Props\"]) {\r\n    var toCall = tag[\"Props\"][\"onClick\"];\r\n    tag[\"Props\"][\"onClick\"] = () => handler(toCall);\r\n  }\r\n\r\n  if (!IsFunc(tag[\"Props\"][\"toggle\"])  &&  \"toggle\" in tag[\"Props\"]) {\r\n    var toCall = tag[\"Props\"][\"toggle\"];\r\n    tag[\"Props\"][\"toggle\"] = () => handler(\"toggleModal\");\r\n  }\r\n\r\n  if (\"isOpen\" in tag[\"Props\"]) {\r\n    tag[\"Props\"][\"isOpen\"] = modal;\r\n  }\r\n\r\n  var tggg;\r\n  tggg = React.createElement(\r\n    components[tag[\"Type\"]] || tag[\"Type\"],\r\n    {\r\n      className: tag[\"Props\"][\"className\"],\r\n      ...tag[\"Props\"]\r\n    },\r\n    tag[\"Content\"],\r\n    tag[\"Childerns\"].map(item => (\r\n      <Tag key={Math.random()} tag={item} handler={handler} modal={modal} />\r\n    ))\r\n  );\r\n  return <React.Fragment>{tggg}</React.Fragment>;\r\n}\r\n\r\nvar IsFunc = x => {\r\n  return typeof x === \"function\";\r\n};\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Tag from \"./Tag2\";\r\n\r\nexport default class Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.Callhandler = this.Callhandler.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.isOpenModal = this.isOpenModal.bind(this);\r\n  }\r\n  state = {\r\n    Layout: {},\r\n    modal: false\r\n  };\r\n  componentDidMount() {\r\n    if (this.state.Layout.lenth > 0) return;\r\n    axios.get(\"https://api.myjson.com/bins/1cs1dw\").then(res => {\r\n      let Layout = res.data;\r\n      this.setState({ Layout });\r\n    });\r\n  }\r\n  changeLayout = () => {};\r\n  alertx = () => {\r\n    alert(\"hello\");\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n  isOpenModal = () => {\r\n    return this.state.modal;\r\n  };\r\n  Callhandler = method => {\r\n    //console.log(method)\r\n    switch (method) {\r\n      case \"UpdateLayout\":\r\n        this.changeLayout();\r\n        break;\r\n      case \"alertx\":\r\n        this.alertx();\r\n        break;\r\n      case \"toggleModal\":\r\n        this.toggleModal();\r\n        break;\r\n      case \"isOpenModal\":\r\n        this.isOpenModal();\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Tag\r\n        tag={this.state.Layout.Components}\r\n        handler={this.Callhandler}\r\n        modal={this.state.modal}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Layout from \"./Layout\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  return <Layout />;\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}